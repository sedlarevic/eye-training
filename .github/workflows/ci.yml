name: CI Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Lint Frontend
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          cd frontend/eye-training
          npm install
          npm run lint

      - name: Lint Backend
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - run: |
          cd backend/eye-training.API
          dotnet restore
          dotnet format --verify-no-changes

      - name: Lint Dockerfiles
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: frontend/eye-training/Dockerfile
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: backend/Dockerfile

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Frontend Security Audit
        working-directory: frontend
        run: |
          echo "Starting frontend security audit."
          npm audit --audit-level=moderate || true

      - name: Backend Security Check
        working-directory: backend/eye-training.API
        run: |
          echo "Starting backend security check."
          dotnet list package --vulnerable || true

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - run: |
          echo "Starting backend testing."
          dotnet test backend/EyeTraining.Tests/EyeTraining.Tests.csproj

      - name: Frontend testing
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          echo "Starting frontend testing."
          cd frontend/eye-training
          npm install
          npm run test

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Backend build
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x
      - run: |
          echo "Starting backend build"
          dotnet build ./backend/eye-training.API --configuration Release

      - name: Frontend build
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: |
          echo "Starting frontend build"
          cd frontend/eye-training
          npm install
          npm run build

  docker-build-push:
    runs-on: ubuntu-latest
    needs: [lint, test, security, build]
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: raldesedlar/eye-training-frontend:latest
          context: ./frontend/eye-training

      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: raldesedlar/eye-training-backend:latest
          context: ./backend
