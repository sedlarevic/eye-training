name: CI Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  lint-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - name: Lint Frontend
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: npm install
      - run: echo "Starting lint check for frontend."
      - run: npm run lint

  lint-backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/TreningVida.API
    steps:
      - uses: actions/checkout@v4
      - name: Lint Backend
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - run: echo "Starting lint check for backend."
      - run: dotnet format --verify-no-changes
  docker-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Lint Backend Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: backend/Dockerfile
      - name: Lint Frontend Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: frontend/Dockerfile
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Frontend Security Audit
        working-directory: frontend
        run: echo "Starting frontend security audit."
        run: npm audit --audit-level=moderate || true

      - name: Backend Security Check
        working-directory: backend/TreningVida.API
        run: echo "Starting backend security check."
        run: dotnet list package --vulnerable || true

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - run: echo "Starting backend testing."
      - run: dotnet test ./backend

      - name: Frontend testing
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - run: echo "Starting frontend testing."
      - run: |
          cd frontend
          npm install
          npm test -- --watchAll=false

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Backend build
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - run: echo "Starting backend build"
      - run: dotnet build ./backend/TreningVida.API --configuration Release

      - name: Frontend build
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: echo "Starting frontend build"
      - run: |
          cd frontend
          npm install
          npm run build

  docker-build-push:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: raldesedlar/eye-training-frontend:latest
          context: ./frontend

      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: raldesedlar/eye-training-backend:latest
          context: ./backend
